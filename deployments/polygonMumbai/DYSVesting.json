{
  "address": "0x10a2aB77CD271Dc6065cFeB454a8117D74aA5617",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "computeNextVestingScheduleIdForHolder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "computeReleasableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "computeVestingScheduleIdForAddressAndIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliffDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slicePeriodSeconds",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "createVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliffDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct DYSVesting.VestingScheduleIn[]",
          "name": "vestingSchedulesIn",
          "type": "tuple[]"
        }
      ],
      "name": "createVestingSchedules",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingIdAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "getVestingSchedule",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "released",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct DYSVesting.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingScheduleByAddressAndIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slicePeriodSeconds",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "released",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct DYSVesting.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "getVestingSchedulesCountByBeneficiary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4cba7d62d630342a00c48ecf0f8990117c7ff56a2ec4b33a39580b146504ebfd",
  "receipt": {
    "to": null,
    "from": "0xFe3AC01fA715A09721266B9db1F9f60d0BF1BDbB",
    "contractAddress": "0x10a2aB77CD271Dc6065cFeB454a8117D74aA5617",
    "transactionIndex": 6,
    "gasUsed": "2620510",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800001000000000000000100000000004000000000020000000000000000000800000000004400000080080000000000400000000000000000000000000000000000000000000080000000000000000000200000000000000000000000000000000000000000080000000000000000004000000000000000000001000000000000000000000000000000100040000020000000000000000000000000000000000000000008000001000000000000100000",
    "blockHash": "0x6b2d7b8448f2175c44d3df5fe6249940cab45219c11e9fe25589a6e03d251943",
    "transactionHash": "0x4cba7d62d630342a00c48ecf0f8990117c7ff56a2ec4b33a39580b146504ebfd",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 32613202,
        "transactionHash": "0x4cba7d62d630342a00c48ecf0f8990117c7ff56a2ec4b33a39580b146504ebfd",
        "address": "0x10a2aB77CD271Dc6065cFeB454a8117D74aA5617",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fe3ac01fa715a09721266b9db1f9f60d0bf1bdbb"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0x6b2d7b8448f2175c44d3df5fe6249940cab45219c11e9fe25589a6e03d251943"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 32613202,
        "transactionHash": "0x4cba7d62d630342a00c48ecf0f8990117c7ff56a2ec4b33a39580b146504ebfd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000fe3ac01fa715a09721266b9db1f9f60d0bf1bdbb",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000df7028bad3e5e000000000000000000000000000000000000000000000000092cb384eb6f3fe6000000000000000000000000000000000000000000002e2454fe796af9ab7a37000000000000000000000000000000000000000000000000091ebc825fc20188000000000000000000000000000000000000000000002e24550c706d8558b895",
        "logIndex": 13,
        "blockHash": "0x6b2d7b8448f2175c44d3df5fe6249940cab45219c11e9fe25589a6e03d251943"
      }
    ],
    "blockNumber": 32613202,
    "cumulativeGasUsed": "3162656",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4EA658c98cfa7446deb80B3d03713321c6D1A6b4"
  ],
  "numDeployments": 1,
  "solcInputHash": "005a7be6b801eacc694bfeb52984f3e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"computeNextVestingScheduleIdForHolder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"computeReleasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"computeVestingScheduleIdForAddressAndIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DYSVesting.VestingScheduleIn[]\",\"name\":\"vestingSchedulesIn\",\"type\":\"tuple[]\"}],\"name\":\"createVestingSchedules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingIdAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct DYSVesting.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingScheduleByAddressAndIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct DYSVesting.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getVestingSchedulesCountByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeNextVestingScheduleIdForHolder(address)\":{\"details\":\"Computes the next vesting schedule identifier for a given holder address.\"},\"computeReleasableAmount(bytes32)\":{\"returns\":{\"_0\":\"the vested amount\"}},\"computeVestingScheduleIdForAddressAndIndex(address,uint256)\":{\"details\":\"Computes the vesting schedule identifier for an address and an index.\"},\"constructor\":{\"details\":\"Creates a vesting contract.\",\"params\":{\"token_\":\"address of the DYS ERC20 token contract\"}},\"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"params\":{\"amount\":\"total amount of tokens to be released at the end of the vesting\",\"beneficiary\":\"address of the beneficiary to whom vested tokens are transferred\",\"cliffDelta\":\"duration in seconds of the cliff in which tokens will begin to vest\",\"duration\":\"duration in seconds of the period in which the tokens will vest\",\"revocable\":\"whether the vesting is revocable or not\",\"slicePeriodSeconds\":\"duration of a slice period for the vesting in seconds\",\"start\":\"start time of the vesting period\"}},\"createVestingSchedules((address,uint256,uint256,uint256,uint256,bool,uint256)[])\":{\"params\":{\"vestingSchedulesIn\":\"array of vesting schedules to create\"}},\"getToken()\":{\"details\":\"Returns the address of the DYS ERC20 token managed by the vesting contract.\"},\"getVestingIdAtIndex(uint256)\":{\"details\":\"Returns the vesting schedule id at the given index.\",\"returns\":{\"_0\":\"the vesting id\"}},\"getVestingSchedule(bytes32)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingSchedulesCount()\":{\"details\":\"Returns the number of vesting schedules managed by this contract.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesCountByBeneficiary(address)\":{\"details\":\"Returns the number of vesting schedules associated to a beneficiary.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesTotalAmount()\":{\"returns\":{\"_0\":\"the total amount of vested funds\"}},\"getWithdrawableAmount()\":{\"details\":\"Returns the amount of tokens that can be withdrawn by the owner.\",\"returns\":{\"_0\":\"the amount of tokens\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"release(bytes32,uint256)\":{\"params\":{\"amount\":\"the amount to release\",\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(bytes32)\":{\"params\":{\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"the amount to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeReleasableAmount(bytes32)\":{\"notice\":\"Computes the vested amount of tokens for the given vesting schedule identifier.\"},\"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Creates a new vesting schedule for a beneficiary.\"},\"createVestingSchedules((address,uint256,uint256,uint256,uint256,bool,uint256)[])\":{\"notice\":\"Creates vesting schedules in batch\"},\"getVestingSchedule(bytes32)\":{\"notice\":\"Returns the vesting schedule information for a given identifier.\"},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"notice\":\"Returns the vesting schedule information for a given holder and index.\"},\"getVestingSchedulesTotalAmount()\":{\"notice\":\"Returns the total amount of vested funds.\"},\"release(bytes32,uint256)\":{\"notice\":\"Release vested amount of tokens.\"},\"revoke(bytes32)\":{\"notice\":\"Revokes the vesting schedule for given identifier.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw the specified amount if possible.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DYS/DYSVesting.sol\":\"DYSVesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DYS/DYSVesting.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// The below is a modified version of the original open-source code found under\\n// https://github.com/abdelhamidbakhta/token-vesting-contracts/blob/main/contracts/TokenVesting.sol\\n// released under the Apache-2.0 license\\n// Original license: https://github.com/abdelhamidbakhta/token-vesting-contracts/blob/main/LICENSE\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n\\ncontract DYSVesting is Ownable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    struct VestingScheduleIn {\\n        address beneficiary;\\n        uint256 start;\\n        uint256 cliffDelta;\\n        uint256 duration;\\n        uint256 slicePeriodSeconds;\\n        bool revocable;\\n        uint256 amount;\\n    }\\n\\n    struct VestingSchedule {\\n        bool initialized;\\n        // beneficiary of tokens after they are released\\n        address  beneficiary;\\n        // cliff period in seconds\\n        uint256  cliff;\\n        // start time of the vesting period\\n        uint256  start;\\n        // duration of the vesting period in seconds\\n        uint256  duration;\\n        // duration of a slice period for the vesting in seconds\\n        uint256 slicePeriodSeconds;\\n        // whether or not the vesting is revocable\\n        bool  revocable;\\n        // total amount of tokens to be released at the end of the vesting\\n        uint256 amountTotal;\\n        // amount of tokens released\\n        uint256  released;\\n        // whether or not the vesting has been revoked\\n        bool revoked;\\n    }\\n\\n    // address of the DYS ERC20 token\\n    IERC20 immutable private _token;\\n\\n    bytes32[] private _vestingSchedulesIds;\\n    mapping(bytes32 => VestingSchedule) private _vestingSchedules;\\n    uint256 private _vestingSchedulesTotalAmount;\\n    mapping(address => uint256) private _holdersVestingCount;\\n\\n    event Released(bytes32 vestingScheduleId, uint256 amount);\\n    event Revoked(bytes32 vestingScheduleId);\\n\\n    /**\\n    * @dev Reverts if the vesting schedule does not exist or has been revoked.\\n    */\\n    modifier onlyIfVestingScheduleNotRevoked(bytes32 vestingScheduleId) {\\n        require(_vestingSchedules[vestingScheduleId].initialized);\\n        require(!_vestingSchedules[vestingScheduleId].revoked);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Creates a vesting contract.\\n     * @param token_ address of the DYS ERC20 token contract\\n     */\\n    constructor(address token_) {\\n        require(token_ != address(0x0));\\n        _token = IERC20(token_);\\n    }\\n\\n    /**\\n    * @dev Returns the number of vesting schedules associated to a beneficiary.\\n    * @return the number of vesting schedules\\n    */\\n    function getVestingSchedulesCountByBeneficiary(address beneficiary)\\n    external\\n    view\\n    returns(uint256) {\\n        return _holdersVestingCount[beneficiary];\\n    }\\n\\n    /**\\n    * @dev Returns the vesting schedule id at the given index.\\n    * @return the vesting id\\n    */\\n    function getVestingIdAtIndex(uint256 index)\\n    external\\n    view\\n    returns(bytes32) {\\n        require(index < getVestingSchedulesCount(), \\\"DYSVesting: index out of bounds\\\");\\n        return _vestingSchedulesIds[index];\\n    }\\n\\n    /**\\n    * @notice Returns the vesting schedule information for a given holder and index.\\n    * @return the vesting schedule structure information\\n    */\\n    function getVestingScheduleByAddressAndIndex(address holder, uint256 index)\\n    external\\n    view\\n    returns(VestingSchedule memory) {\\n        return getVestingSchedule(computeVestingScheduleIdForAddressAndIndex(holder, index));\\n    }\\n\\n\\n    /**\\n    * @notice Returns the total amount of vested funds.\\n    * @return the total amount of vested funds\\n    */\\n    function getVestingSchedulesTotalAmount()\\n    external\\n    view\\n    returns(uint256) {\\n        return _vestingSchedulesTotalAmount;\\n    }\\n\\n    /**\\n    * @dev Returns the address of the DYS ERC20 token managed by the vesting contract.\\n    */\\n    function getToken()\\n    external\\n    view\\n    returns(address) {\\n        return address(_token);\\n    }\\n\\n    /**\\n    * @notice Creates a new vesting schedule for a beneficiary.\\n    * @param beneficiary address of the beneficiary to whom vested tokens are transferred\\n    * @param start start time of the vesting period\\n    * @param cliffDelta duration in seconds of the cliff in which tokens will begin to vest\\n    * @param duration duration in seconds of the period in which the tokens will vest\\n    * @param slicePeriodSeconds duration of a slice period for the vesting in seconds\\n    * @param revocable whether the vesting is revocable or not\\n    * @param amount total amount of tokens to be released at the end of the vesting\\n    */\\n    function createVestingSchedule(\\n        address beneficiary,\\n        uint256 start,\\n        uint256 cliffDelta,\\n        uint256 duration,\\n        uint256 slicePeriodSeconds,\\n        bool revocable,\\n        uint256 amount\\n    )\\n    public\\n    onlyOwner {\\n        require(\\n            getWithdrawableAmount() >= amount,\\n            \\\"DYSVesting: cannot create vesting schedule because not sufficient tokens\\\"\\n        );\\n        require(duration > 0, \\\"DYSVesting: duration must be > 0\\\");\\n        require(amount > 0, \\\"DYSVesting: amount must be > 0\\\");\\n        require(slicePeriodSeconds >= 1, \\\"DYSVesting: slicePeriodSeconds must be >= 1\\\");\\n        require(cliffDelta <= duration, \\\"DYSVesting: cliffDelta cannot be higher than duration\\\");\\n        bytes32 vestingScheduleId = computeNextVestingScheduleIdForHolder(beneficiary);\\n        uint256 cliff = start + cliffDelta;\\n        _vestingSchedules[vestingScheduleId] = VestingSchedule(\\n            true,\\n            beneficiary,\\n            cliff,\\n            start,\\n            duration,\\n            slicePeriodSeconds,\\n            revocable,\\n            amount,\\n            0,\\n            false\\n        );\\n        _vestingSchedulesTotalAmount += amount;\\n        _vestingSchedulesIds.push(vestingScheduleId);\\n        _holdersVestingCount[beneficiary] += 1;\\n    }\\n\\n    /**\\n    * @notice Creates vesting schedules in batch\\n    * @param vestingSchedulesIn array of vesting schedules to create\\n    */\\n    function createVestingSchedules(\\n        VestingScheduleIn[] calldata vestingSchedulesIn\\n    ) external onlyOwner {\\n        for (uint256 i = 0; i < vestingSchedulesIn.length; i++) {\\n            createVestingSchedule(\\n                vestingSchedulesIn[i].beneficiary,\\n                vestingSchedulesIn[i].start,\\n                vestingSchedulesIn[i].cliffDelta,\\n                vestingSchedulesIn[i].duration,\\n                vestingSchedulesIn[i].slicePeriodSeconds,\\n                vestingSchedulesIn[i].revocable,\\n                vestingSchedulesIn[i].amount\\n            );\\n        }\\n    }\\n\\n    /**\\n    * @notice Revokes the vesting schedule for given identifier.\\n    * @param vestingScheduleId the vesting schedule identifier\\n    */\\n    function revoke(bytes32 vestingScheduleId)\\n    public\\n    onlyOwner\\n    onlyIfVestingScheduleNotRevoked(vestingScheduleId) {\\n        VestingSchedule storage vestingSchedule = _vestingSchedules[vestingScheduleId];\\n        require(vestingSchedule.revocable, \\\"DYSVesting: vesting is not revocable\\\");\\n        uint256 vestedAmount = _computeReleasableAmount(vestingSchedule);\\n        if (vestedAmount > 0) {\\n            release(vestingScheduleId, vestedAmount);\\n        }\\n        uint256 unreleased = vestingSchedule.amountTotal - vestingSchedule.released;\\n        _vestingSchedulesTotalAmount -= unreleased;\\n        vestingSchedule.revoked = true;\\n        emit Revoked(vestingScheduleId);\\n    }\\n\\n    /**\\n    * @notice Withdraw the specified amount if possible.\\n    * @param amount the amount to withdraw\\n    */\\n    function withdraw(uint256 amount)\\n    public\\n    nonReentrant\\n    onlyOwner {\\n        require(getWithdrawableAmount() >= amount, \\\"DYSVesting: not enough withdrawable funds\\\");\\n        _token.safeTransfer(owner(), amount);\\n    }\\n\\n    /**\\n    * @notice Release vested amount of tokens.\\n    * @param vestingScheduleId the vesting schedule identifier\\n    * @param amount the amount to release\\n    */\\n    function release(\\n        bytes32 vestingScheduleId,\\n        uint256 amount\\n    )\\n    public\\n    nonReentrant\\n    onlyIfVestingScheduleNotRevoked(vestingScheduleId) {\\n        VestingSchedule storage vestingSchedule = _vestingSchedules[vestingScheduleId];\\n        bool isBeneficiary = msg.sender == vestingSchedule.beneficiary;\\n        bool isOwner = msg.sender == owner();\\n        require(\\n            isBeneficiary || isOwner,\\n            \\\"DYSVesting: only beneficiary and owner can release vested tokens\\\"\\n        );\\n        uint256 vestedAmount = _computeReleasableAmount(vestingSchedule);\\n        require(vestedAmount >= amount, \\\"DYSVesting: cannot release tokens, not enough vested tokens\\\");\\n        vestingSchedule.released += amount;\\n        _vestingSchedulesTotalAmount -= amount;\\n        _token.safeTransfer(vestingSchedule.beneficiary, amount);\\n        emit Released(vestingScheduleId, amount);\\n    }\\n\\n    /**\\n    * @dev Returns the number of vesting schedules managed by this contract.\\n    * @return the number of vesting schedules\\n    */\\n    function getVestingSchedulesCount()\\n    public\\n    view\\n    returns(uint256) {\\n        return _vestingSchedulesIds.length;\\n    }\\n\\n    /**\\n    * @notice Computes the vested amount of tokens for the given vesting schedule identifier.\\n    * @return the vested amount\\n    */\\n    function computeReleasableAmount(bytes32 vestingScheduleId)\\n    public\\n    onlyIfVestingScheduleNotRevoked(vestingScheduleId)\\n    view\\n    returns(uint256) {\\n        VestingSchedule storage vestingSchedule = _vestingSchedules[vestingScheduleId];\\n        return _computeReleasableAmount(vestingSchedule);\\n    }\\n\\n    /**\\n    * @notice Returns the vesting schedule information for a given identifier.\\n    * @return the vesting schedule structure information\\n    */\\n    function getVestingSchedule(bytes32 vestingScheduleId)\\n    public\\n    view\\n    returns(VestingSchedule memory) {\\n        return _vestingSchedules[vestingScheduleId];\\n    }\\n\\n    /**\\n    * @dev Returns the amount of tokens that can be withdrawn by the owner.\\n    * @return the amount of tokens\\n    */\\n    function getWithdrawableAmount()\\n    public\\n    view\\n    returns(uint256) {\\n        return _token.balanceOf(address(this)) - _vestingSchedulesTotalAmount;\\n    }\\n\\n    /**\\n    * @dev Computes the next vesting schedule identifier for a given holder address.\\n    */\\n    function computeNextVestingScheduleIdForHolder(address holder)\\n    public\\n    view\\n    returns(bytes32) {\\n        return computeVestingScheduleIdForAddressAndIndex(holder, _holdersVestingCount[holder]);\\n    }\\n\\n    /**\\n    * @dev Computes the vesting schedule identifier for an address and an index.\\n    */\\n    function computeVestingScheduleIdForAddressAndIndex(address holder, uint256 index)\\n    public\\n    pure\\n    returns(bytes32) {\\n        return keccak256(abi.encodePacked(holder, index));\\n    }\\n\\n    /**\\n    * @dev Computes the releasable amount of tokens for a vesting schedule.\\n    * @return the amount of releasable tokens\\n    */\\n    function _computeReleasableAmount(VestingSchedule memory vestingSchedule)\\n    internal\\n    view\\n    returns(uint256) {\\n        uint256 currentTime = getCurrentTime();\\n        if ((currentTime < vestingSchedule.cliff) || vestingSchedule.revoked) {\\n            return 0;\\n        } else if (currentTime >= vestingSchedule.start + vestingSchedule.duration) {\\n            return vestingSchedule.amountTotal - vestingSchedule.released;\\n        } else {\\n            uint256 timeFromStart = currentTime - vestingSchedule.start;\\n            uint secondsPerSlice = vestingSchedule.slicePeriodSeconds;\\n            uint256 vestedSlicePeriods = timeFromStart / secondsPerSlice;\\n            uint256 vestedSeconds = vestedSlicePeriods * secondsPerSlice;\\n            uint256 vestedAmount = vestingSchedule.amountTotal * vestedSeconds / vestingSchedule.duration;\\n            return vestedAmount - vestingSchedule.released;\\n        }\\n    }\\n\\n    function getCurrentTime()\\n    internal\\n    virtual\\n    view\\n    returns(uint256) {\\n        return block.timestamp;\\n    }\\n}\\n\",\"keccak256\":\"0x2af7db2f24f7e7a60f1d0f423a1b3a06f3cae82cf94a953117f359fc665218c0\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162003019380380620030198339818101604052810190620000379190620001ba565b620000576200004b620000d760201b60201c565b620000df60201b60201c565b60018081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200009957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000234565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001b4816200021a565b92915050565b600060208284031215620001cd57600080fd5b6000620001dd84828501620001a3565b91505092915050565b6000620001f382620001fa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200022581620001e6565b81146200023157600080fd5b50565b60805160601c612db1620002686000396000818161074f0152818161082101528181610bfa0152610f250152612db16000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638af104da116100ad578063ea1bb3d511610071578063ea1bb3d5146102e2578063f2fde38b14610312578063f51321d71461032e578063f7c469f01461035e578063f9079b371461038e57610121565b80638af104da1461022a5780638da5cb5b1461025a57806390be10cc146102785780639ef346b414610296578063b75c7dc6146102c657610121565b806348deb471116100f457806348deb4711461019a5780635a7bb69a146101b857806366afd8ef146101e8578063715018a614610204578063895005b61461020e57610121565b8063130836171461012657806317e289e91461014457806321df0da7146101605780632e1a7d4d1461017e575b600080fd5b61012e6103be565b60405161013b9190612613565b60405180910390f35b61015e60048036038101906101599190611d30565b6103cb565b005b61016861074b565b604051610175919061234d565b60405180910390f35b61019860048036038101906101939190611eca565b610773565b005b6101a261086f565b6040516101af9190612613565b60405180910390f35b6101d260048036038101906101cd9190611ccb565b610879565b6040516101df9190612613565b60405180910390f35b61020260048036038101906101fd9190611e8e565b6108c2565b005b61020c610c87565b005b61022860048036038101906102239190611dce565b610c9b565b005b610244600480360381019061023f9190611cf4565b610ec2565b6040516102519190612391565b60405180910390f35b610262610ef5565b60405161026f919061234d565b60405180910390f35b610280610f1e565b60405161028d9190612613565b60405180910390f35b6102b060048036038101906102ab9190611e65565b610fdb565b6040516102bd91906125f7565b60405180910390f35b6102e060048036038101906102db9190611e65565b6110ec565b005b6102fc60048036038101906102f79190611e65565b611354565b6040516103099190612613565b60405180910390f35b61032c60048036038101906103279190611ccb565b6114ca565b005b61034860048036038101906103439190611cf4565b61154e565b60405161035591906125f7565b60405180910390f35b61037860048036038101906103739190611ccb565b611570565b6040516103859190612391565b60405180910390f35b6103a860048036038101906103a39190611eca565b6115c2565b6040516103b59190612391565b60405180910390f35b6000600280549050905090565b6103d3611659565b806103dc610f1e565b101561041d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610414906124f7565b60405180910390fd5b60008411610460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610457906125d7565b60405180910390fd5b600081116104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90612457565b60405180910390fd5b60018310156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90612437565b60405180910390fd5b8385111561052a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610521906124d7565b60405180910390fd5b600061053588611570565b9050600086886105459190612660565b90506040518061014001604052806001151581526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001828152602001898152602001878152602001868152602001851515815260200184815260200160008152602001600015158152506003600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff02191690831515021790555090505082600460008282546106b99190612660565b9250508190555060028290806001815401808255809150506001900390600052602060002001600090919091909150556001600560008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107399190612660565b92505081905550505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260015414156107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b0906125b7565b60405180910390fd5b60026001819055506107c9611659565b806107d2610f1e565b1015610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a906123f7565b60405180910390fd5b61086561081e610ef5565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116d79092919063ffffffff16565b6001808190555050565b6000600454905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60026001541415610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff906125b7565b60405180910390fd5b6002600181905550816003600082815260200190815260200160002060000160009054906101000a900460ff1661093e57600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff161561096c57600080fd5b600060036000858152602001908152602001600020905060008160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905060006109e4610ef5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161490508180610a1d5750805b610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5390612517565b60405180910390fd5b6000610b5684604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b905085811015610b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9290612577565b60405180910390fd5b85846007016000828254610baf9190612660565b925050819055508560046000828254610bc89190612741565b92505081905550610c3e8460000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16877f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116d79092919063ffffffff16565b7f22f206afbb58bbf5e729b2561506cabe613d001ea92899e227b3c2891cbcddc98787604051610c6f9291906123ac565b60405180910390a15050505050600180819055505050565b610c8f611659565b610c996000611843565b565b610ca3611659565b60005b82829050811015610ebd57610eaa838383818110610ced577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e002016000016020810190610d059190611ccb565b848484818110610d3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160200135858585818110610d81577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160400135868686818110610dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160600135878787818110610e07577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160800135888888818110610e4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160a0016020810190610e629190611e13565b898989818110610e9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160c001356103cb565b8080610eb5906127fa565b915050610ca6565b505050565b60008282604051602001610ed792919061230a565b60405160208183030381529060405280519060200120905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f7c919061234d565b60206040518083038186803b158015610f9457600080fd5b505afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc9190611ef3565b610fd69190612741565b905090565b610fe3611b94565b60036000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050919050565b6110f4611659565b806003600082815260200190815260200160002060000160009054906101000a900460ff1661112257600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff161561115057600080fd5b60006003600084815260200190815260200160002090508060050160009054906101000a900460ff166111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111af90612537565b60405180910390fd5b60006112b282604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b905060008111156112c8576112c784826108c2565b5b6000826007015483600601546112de9190612741565b905080600460008282546112f29190612741565b9250508190555060018360080160006101000a81548160ff0219169083151502179055507fe5af7daed5ab2a2dc5f98d53619f05089c0c14d11a6621f6b906a2366c9a7ab3856040516113459190612391565b60405180910390a15050505050565b6000816003600082815260200190815260200160002060000160009054906101000a900460ff1661138457600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff16156113b257600080fd5b60006003600085815260200190815260200160002090506114c181604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b92505050919050565b6114d2611659565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153990612417565b60405180910390fd5b61154b81611843565b50565b611556611b94565b6115686115638484610ec2565b610fdb565b905092915050565b60006115bb82600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec2565b9050919050565b60006115cc6103be565b821061160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160490612497565b60405180910390fd5b60028281548110611647577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b611661611907565b73ffffffffffffffffffffffffffffffffffffffff1661167f610ef5565b73ffffffffffffffffffffffffffffffffffffffff16146116d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cc906124b7565b60405180910390fd5b565b6117588363a9059cbb60e01b84846040516024016116f6929190612368565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190f565b505050565b6000806117686119d6565b9050826040015181108061177e57508261012001515b1561178d57600091505061183e565b826080015183606001516117a19190612660565b81106117c4578261010001518360e001516117bc9190612741565b91505061183e565b60008360600151826117d69190612741565b905060008460a001519050600081836117ef91906126b6565b9050600082826117ff91906126e7565b905060008760800151828960e0015161181891906126e7565b61182291906126b6565b9050876101000151816118359190612741565b96505050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119de9092919063ffffffff16565b90506000815111156119d157808060200190518101906119919190611e3c565b6119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790612597565b60405180910390fd5b5b505050565b600042905090565b60606119ed84846000856119f6565b90509392505050565b606082471015611a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3290612477565b60405180910390fd5b611a4485611b0a565b611a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7a90612557565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aac9190612336565b60006040518083038185875af1925050503d8060008114611ae9576040519150601f19603f3d011682016040523d82523d6000602084013e611aee565b606091505b5091509150611afe828286611b2d565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b3d57829050611b8d565b600083511115611b505782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8491906123d5565b60405180910390fd5b9392505050565b604051806101400160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b600081359050611c1281612d1f565b92915050565b60008083601f840112611c2a57600080fd5b8235905067ffffffffffffffff811115611c4357600080fd5b6020830191508360e0820283011115611c5b57600080fd5b9250929050565b600081359050611c7181612d36565b92915050565b600081519050611c8681612d36565b92915050565b600081359050611c9b81612d4d565b92915050565b600081359050611cb081612d64565b92915050565b600081519050611cc581612d64565b92915050565b600060208284031215611cdd57600080fd5b6000611ceb84828501611c03565b91505092915050565b60008060408385031215611d0757600080fd5b6000611d1585828601611c03565b9250506020611d2685828601611ca1565b9150509250929050565b600080600080600080600060e0888a031215611d4b57600080fd5b6000611d598a828b01611c03565b9750506020611d6a8a828b01611ca1565b9650506040611d7b8a828b01611ca1565b9550506060611d8c8a828b01611ca1565b9450506080611d9d8a828b01611ca1565b93505060a0611dae8a828b01611c62565b92505060c0611dbf8a828b01611ca1565b91505092959891949750929550565b60008060208385031215611de157600080fd5b600083013567ffffffffffffffff811115611dfb57600080fd5b611e0785828601611c18565b92509250509250929050565b600060208284031215611e2557600080fd5b6000611e3384828501611c62565b91505092915050565b600060208284031215611e4e57600080fd5b6000611e5c84828501611c77565b91505092915050565b600060208284031215611e7757600080fd5b6000611e8584828501611c8c565b91505092915050565b60008060408385031215611ea157600080fd5b6000611eaf85828601611c8c565b9250506020611ec085828601611ca1565b9150509250929050565b600060208284031215611edc57600080fd5b6000611eea84828501611ca1565b91505092915050565b600060208284031215611f0557600080fd5b6000611f1384828501611cb6565b91505092915050565b611f2581612775565b82525050565b611f3481612775565b82525050565b611f4b611f4682612775565b612843565b82525050565b611f5a81612787565b82525050565b611f6981612793565b82525050565b6000611f7a8261262e565b611f848185612644565b9350611f948185602086016127c7565b80840191505092915050565b6000611fab82612639565b611fb5818561264f565b9350611fc58185602086016127c7565b611fce816128cf565b840191505092915050565b6000611fe660298361264f565b9150611ff1826128ed565b604082019050919050565b600061200960268361264f565b91506120148261293c565b604082019050919050565b600061202c602b8361264f565b91506120378261298b565b604082019050919050565b600061204f601e8361264f565b915061205a826129da565b602082019050919050565b600061207260268361264f565b915061207d82612a03565b604082019050919050565b6000612095601f8361264f565b91506120a082612a52565b602082019050919050565b60006120b860208361264f565b91506120c382612a7b565b602082019050919050565b60006120db60358361264f565b91506120e682612aa4565b604082019050919050565b60006120fe60488361264f565b915061210982612af3565b606082019050919050565b600061212160408361264f565b915061212c82612b68565b604082019050919050565b600061214460248361264f565b915061214f82612bb7565b604082019050919050565b6000612167601d8361264f565b915061217282612c06565b602082019050919050565b600061218a603b8361264f565b915061219582612c2f565b604082019050919050565b60006121ad602a8361264f565b91506121b882612c7e565b604082019050919050565b60006121d0601f8361264f565b91506121db82612ccd565b602082019050919050565b60006121f360208361264f565b91506121fe82612cf6565b602082019050919050565b610140820160008201516122206000850182611f51565b5060208201516122336020850182611f1c565b50604082015161224660408501826122d5565b50606082015161225960608501826122d5565b50608082015161226c60808501826122d5565b5060a082015161227f60a08501826122d5565b5060c082015161229260c0850182611f51565b5060e08201516122a560e08501826122d5565b506101008201516122ba6101008501826122d5565b506101208201516122cf610120850182611f51565b50505050565b6122de816127bd565b82525050565b6122ed816127bd565b82525050565b6123046122ff826127bd565b612867565b82525050565b60006123168285611f3a565b60148201915061232682846122f3565b6020820191508190509392505050565b60006123428284611f6f565b915081905092915050565b60006020820190506123626000830184611f2b565b92915050565b600060408201905061237d6000830185611f2b565b61238a60208301846122e4565b9392505050565b60006020820190506123a66000830184611f60565b92915050565b60006040820190506123c16000830185611f60565b6123ce60208301846122e4565b9392505050565b600060208201905081810360008301526123ef8184611fa0565b905092915050565b6000602082019050818103600083015261241081611fd9565b9050919050565b6000602082019050818103600083015261243081611ffc565b9050919050565b600060208201905081810360008301526124508161201f565b9050919050565b6000602082019050818103600083015261247081612042565b9050919050565b6000602082019050818103600083015261249081612065565b9050919050565b600060208201905081810360008301526124b081612088565b9050919050565b600060208201905081810360008301526124d0816120ab565b9050919050565b600060208201905081810360008301526124f0816120ce565b9050919050565b60006020820190508181036000830152612510816120f1565b9050919050565b6000602082019050818103600083015261253081612114565b9050919050565b6000602082019050818103600083015261255081612137565b9050919050565b600060208201905081810360008301526125708161215a565b9050919050565b600060208201905081810360008301526125908161217d565b9050919050565b600060208201905081810360008301526125b0816121a0565b9050919050565b600060208201905081810360008301526125d0816121c3565b9050919050565b600060208201905081810360008301526125f0816121e6565b9050919050565b60006101408201905061260d6000830184612209565b92915050565b600060208201905061262860008301846122e4565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061266b826127bd565b9150612676836127bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126ab576126aa612871565b5b828201905092915050565b60006126c1826127bd565b91506126cc836127bd565b9250826126dc576126db6128a0565b5b828204905092915050565b60006126f2826127bd565b91506126fd836127bd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561273657612735612871565b5b828202905092915050565b600061274c826127bd565b9150612757836127bd565b92508282101561276a57612769612871565b5b828203905092915050565b60006127808261279d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156127e55780820151818401526020810190506127ca565b838111156127f4576000848401525b50505050565b6000612805826127bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561283857612837612871565b5b600182019050919050565b600061284e82612855565b9050919050565b6000612860826128e0565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f44595356657374696e673a206e6f7420656e6f7567682077697468647261776160008201527f626c652066756e64730000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20736c696365506572696f645365636f6e6473206d60008201527f757374206265203e3d2031000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20616d6f756e74206d757374206265203e20300000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20696e646578206f7574206f6620626f756e647300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f44595356657374696e673a20636c69666644656c74612063616e6e6f7420626560008201527f20686967686572207468616e206475726174696f6e0000000000000000000000602082015250565b7f44595356657374696e673a2063616e6e6f74206372656174652076657374696e60008201527f67207363686564756c652062656361757365206e6f742073756666696369656e60208201527f7420746f6b656e73000000000000000000000000000000000000000000000000604082015250565b7f44595356657374696e673a206f6e6c792062656e656669636961727920616e6460008201527f206f776e65722063616e2072656c656173652076657374656420746f6b656e73602082015250565b7f44595356657374696e673a2076657374696e67206973206e6f74207265766f6360008201527f61626c6500000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f44595356657374696e673a2063616e6e6f742072656c6561736520746f6b656e60008201527f732c206e6f7420656e6f7567682076657374656420746f6b656e730000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f44595356657374696e673a206475726174696f6e206d757374206265203e2030600082015250565b612d2881612775565b8114612d3357600080fd5b50565b612d3f81612787565b8114612d4a57600080fd5b50565b612d5681612793565b8114612d6157600080fd5b50565b612d6d816127bd565b8114612d7857600080fd5b5056fea26469706673582212202184a19e28d3fc3947d62dcfd47dc0df1c11d56debefe49757095ab9b20d478d64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80638af104da116100ad578063ea1bb3d511610071578063ea1bb3d5146102e2578063f2fde38b14610312578063f51321d71461032e578063f7c469f01461035e578063f9079b371461038e57610121565b80638af104da1461022a5780638da5cb5b1461025a57806390be10cc146102785780639ef346b414610296578063b75c7dc6146102c657610121565b806348deb471116100f457806348deb4711461019a5780635a7bb69a146101b857806366afd8ef146101e8578063715018a614610204578063895005b61461020e57610121565b8063130836171461012657806317e289e91461014457806321df0da7146101605780632e1a7d4d1461017e575b600080fd5b61012e6103be565b60405161013b9190612613565b60405180910390f35b61015e60048036038101906101599190611d30565b6103cb565b005b61016861074b565b604051610175919061234d565b60405180910390f35b61019860048036038101906101939190611eca565b610773565b005b6101a261086f565b6040516101af9190612613565b60405180910390f35b6101d260048036038101906101cd9190611ccb565b610879565b6040516101df9190612613565b60405180910390f35b61020260048036038101906101fd9190611e8e565b6108c2565b005b61020c610c87565b005b61022860048036038101906102239190611dce565b610c9b565b005b610244600480360381019061023f9190611cf4565b610ec2565b6040516102519190612391565b60405180910390f35b610262610ef5565b60405161026f919061234d565b60405180910390f35b610280610f1e565b60405161028d9190612613565b60405180910390f35b6102b060048036038101906102ab9190611e65565b610fdb565b6040516102bd91906125f7565b60405180910390f35b6102e060048036038101906102db9190611e65565b6110ec565b005b6102fc60048036038101906102f79190611e65565b611354565b6040516103099190612613565b60405180910390f35b61032c60048036038101906103279190611ccb565b6114ca565b005b61034860048036038101906103439190611cf4565b61154e565b60405161035591906125f7565b60405180910390f35b61037860048036038101906103739190611ccb565b611570565b6040516103859190612391565b60405180910390f35b6103a860048036038101906103a39190611eca565b6115c2565b6040516103b59190612391565b60405180910390f35b6000600280549050905090565b6103d3611659565b806103dc610f1e565b101561041d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610414906124f7565b60405180910390fd5b60008411610460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610457906125d7565b60405180910390fd5b600081116104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90612457565b60405180910390fd5b60018310156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90612437565b60405180910390fd5b8385111561052a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610521906124d7565b60405180910390fd5b600061053588611570565b9050600086886105459190612660565b90506040518061014001604052806001151581526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001828152602001898152602001878152602001868152602001851515815260200184815260200160008152602001600015158152506003600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff02191690831515021790555090505082600460008282546106b99190612660565b9250508190555060028290806001815401808255809150506001900390600052602060002001600090919091909150556001600560008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107399190612660565b92505081905550505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260015414156107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b0906125b7565b60405180910390fd5b60026001819055506107c9611659565b806107d2610f1e565b1015610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a906123f7565b60405180910390fd5b61086561081e610ef5565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116d79092919063ffffffff16565b6001808190555050565b6000600454905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60026001541415610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff906125b7565b60405180910390fd5b6002600181905550816003600082815260200190815260200160002060000160009054906101000a900460ff1661093e57600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff161561096c57600080fd5b600060036000858152602001908152602001600020905060008160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905060006109e4610ef5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161490508180610a1d5750805b610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5390612517565b60405180910390fd5b6000610b5684604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b905085811015610b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9290612577565b60405180910390fd5b85846007016000828254610baf9190612660565b925050819055508560046000828254610bc89190612741565b92505081905550610c3e8460000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16877f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116d79092919063ffffffff16565b7f22f206afbb58bbf5e729b2561506cabe613d001ea92899e227b3c2891cbcddc98787604051610c6f9291906123ac565b60405180910390a15050505050600180819055505050565b610c8f611659565b610c996000611843565b565b610ca3611659565b60005b82829050811015610ebd57610eaa838383818110610ced577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e002016000016020810190610d059190611ccb565b848484818110610d3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160200135858585818110610d81577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160400135868686818110610dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160600135878787818110610e07577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160800135888888818110610e4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160a0016020810190610e629190611e13565b898989818110610e9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060e0020160c001356103cb565b8080610eb5906127fa565b915050610ca6565b505050565b60008282604051602001610ed792919061230a565b60405160208183030381529060405280519060200120905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f7c919061234d565b60206040518083038186803b158015610f9457600080fd5b505afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc9190611ef3565b610fd69190612741565b905090565b610fe3611b94565b60036000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050919050565b6110f4611659565b806003600082815260200190815260200160002060000160009054906101000a900460ff1661112257600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff161561115057600080fd5b60006003600084815260200190815260200160002090508060050160009054906101000a900460ff166111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111af90612537565b60405180910390fd5b60006112b282604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b905060008111156112c8576112c784826108c2565b5b6000826007015483600601546112de9190612741565b905080600460008282546112f29190612741565b9250508190555060018360080160006101000a81548160ff0219169083151502179055507fe5af7daed5ab2a2dc5f98d53619f05089c0c14d11a6621f6b906a2366c9a7ab3856040516113459190612391565b60405180910390a15050505050565b6000816003600082815260200190815260200160002060000160009054906101000a900460ff1661138457600080fd5b6003600082815260200190815260200160002060080160009054906101000a900460ff16156113b257600080fd5b60006003600085815260200190815260200160002090506114c181604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152505061175d565b92505050919050565b6114d2611659565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153990612417565b60405180910390fd5b61154b81611843565b50565b611556611b94565b6115686115638484610ec2565b610fdb565b905092915050565b60006115bb82600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec2565b9050919050565b60006115cc6103be565b821061160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160490612497565b60405180910390fd5b60028281548110611647577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b611661611907565b73ffffffffffffffffffffffffffffffffffffffff1661167f610ef5565b73ffffffffffffffffffffffffffffffffffffffff16146116d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cc906124b7565b60405180910390fd5b565b6117588363a9059cbb60e01b84846040516024016116f6929190612368565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190f565b505050565b6000806117686119d6565b9050826040015181108061177e57508261012001515b1561178d57600091505061183e565b826080015183606001516117a19190612660565b81106117c4578261010001518360e001516117bc9190612741565b91505061183e565b60008360600151826117d69190612741565b905060008460a001519050600081836117ef91906126b6565b9050600082826117ff91906126e7565b905060008760800151828960e0015161181891906126e7565b61182291906126b6565b9050876101000151816118359190612741565b96505050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119de9092919063ffffffff16565b90506000815111156119d157808060200190518101906119919190611e3c565b6119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790612597565b60405180910390fd5b5b505050565b600042905090565b60606119ed84846000856119f6565b90509392505050565b606082471015611a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3290612477565b60405180910390fd5b611a4485611b0a565b611a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7a90612557565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aac9190612336565b60006040518083038185875af1925050503d8060008114611ae9576040519150601f19603f3d011682016040523d82523d6000602084013e611aee565b606091505b5091509150611afe828286611b2d565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b3d57829050611b8d565b600083511115611b505782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8491906123d5565b60405180910390fd5b9392505050565b604051806101400160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b600081359050611c1281612d1f565b92915050565b60008083601f840112611c2a57600080fd5b8235905067ffffffffffffffff811115611c4357600080fd5b6020830191508360e0820283011115611c5b57600080fd5b9250929050565b600081359050611c7181612d36565b92915050565b600081519050611c8681612d36565b92915050565b600081359050611c9b81612d4d565b92915050565b600081359050611cb081612d64565b92915050565b600081519050611cc581612d64565b92915050565b600060208284031215611cdd57600080fd5b6000611ceb84828501611c03565b91505092915050565b60008060408385031215611d0757600080fd5b6000611d1585828601611c03565b9250506020611d2685828601611ca1565b9150509250929050565b600080600080600080600060e0888a031215611d4b57600080fd5b6000611d598a828b01611c03565b9750506020611d6a8a828b01611ca1565b9650506040611d7b8a828b01611ca1565b9550506060611d8c8a828b01611ca1565b9450506080611d9d8a828b01611ca1565b93505060a0611dae8a828b01611c62565b92505060c0611dbf8a828b01611ca1565b91505092959891949750929550565b60008060208385031215611de157600080fd5b600083013567ffffffffffffffff811115611dfb57600080fd5b611e0785828601611c18565b92509250509250929050565b600060208284031215611e2557600080fd5b6000611e3384828501611c62565b91505092915050565b600060208284031215611e4e57600080fd5b6000611e5c84828501611c77565b91505092915050565b600060208284031215611e7757600080fd5b6000611e8584828501611c8c565b91505092915050565b60008060408385031215611ea157600080fd5b6000611eaf85828601611c8c565b9250506020611ec085828601611ca1565b9150509250929050565b600060208284031215611edc57600080fd5b6000611eea84828501611ca1565b91505092915050565b600060208284031215611f0557600080fd5b6000611f1384828501611cb6565b91505092915050565b611f2581612775565b82525050565b611f3481612775565b82525050565b611f4b611f4682612775565b612843565b82525050565b611f5a81612787565b82525050565b611f6981612793565b82525050565b6000611f7a8261262e565b611f848185612644565b9350611f948185602086016127c7565b80840191505092915050565b6000611fab82612639565b611fb5818561264f565b9350611fc58185602086016127c7565b611fce816128cf565b840191505092915050565b6000611fe660298361264f565b9150611ff1826128ed565b604082019050919050565b600061200960268361264f565b91506120148261293c565b604082019050919050565b600061202c602b8361264f565b91506120378261298b565b604082019050919050565b600061204f601e8361264f565b915061205a826129da565b602082019050919050565b600061207260268361264f565b915061207d82612a03565b604082019050919050565b6000612095601f8361264f565b91506120a082612a52565b602082019050919050565b60006120b860208361264f565b91506120c382612a7b565b602082019050919050565b60006120db60358361264f565b91506120e682612aa4565b604082019050919050565b60006120fe60488361264f565b915061210982612af3565b606082019050919050565b600061212160408361264f565b915061212c82612b68565b604082019050919050565b600061214460248361264f565b915061214f82612bb7565b604082019050919050565b6000612167601d8361264f565b915061217282612c06565b602082019050919050565b600061218a603b8361264f565b915061219582612c2f565b604082019050919050565b60006121ad602a8361264f565b91506121b882612c7e565b604082019050919050565b60006121d0601f8361264f565b91506121db82612ccd565b602082019050919050565b60006121f360208361264f565b91506121fe82612cf6565b602082019050919050565b610140820160008201516122206000850182611f51565b5060208201516122336020850182611f1c565b50604082015161224660408501826122d5565b50606082015161225960608501826122d5565b50608082015161226c60808501826122d5565b5060a082015161227f60a08501826122d5565b5060c082015161229260c0850182611f51565b5060e08201516122a560e08501826122d5565b506101008201516122ba6101008501826122d5565b506101208201516122cf610120850182611f51565b50505050565b6122de816127bd565b82525050565b6122ed816127bd565b82525050565b6123046122ff826127bd565b612867565b82525050565b60006123168285611f3a565b60148201915061232682846122f3565b6020820191508190509392505050565b60006123428284611f6f565b915081905092915050565b60006020820190506123626000830184611f2b565b92915050565b600060408201905061237d6000830185611f2b565b61238a60208301846122e4565b9392505050565b60006020820190506123a66000830184611f60565b92915050565b60006040820190506123c16000830185611f60565b6123ce60208301846122e4565b9392505050565b600060208201905081810360008301526123ef8184611fa0565b905092915050565b6000602082019050818103600083015261241081611fd9565b9050919050565b6000602082019050818103600083015261243081611ffc565b9050919050565b600060208201905081810360008301526124508161201f565b9050919050565b6000602082019050818103600083015261247081612042565b9050919050565b6000602082019050818103600083015261249081612065565b9050919050565b600060208201905081810360008301526124b081612088565b9050919050565b600060208201905081810360008301526124d0816120ab565b9050919050565b600060208201905081810360008301526124f0816120ce565b9050919050565b60006020820190508181036000830152612510816120f1565b9050919050565b6000602082019050818103600083015261253081612114565b9050919050565b6000602082019050818103600083015261255081612137565b9050919050565b600060208201905081810360008301526125708161215a565b9050919050565b600060208201905081810360008301526125908161217d565b9050919050565b600060208201905081810360008301526125b0816121a0565b9050919050565b600060208201905081810360008301526125d0816121c3565b9050919050565b600060208201905081810360008301526125f0816121e6565b9050919050565b60006101408201905061260d6000830184612209565b92915050565b600060208201905061262860008301846122e4565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061266b826127bd565b9150612676836127bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126ab576126aa612871565b5b828201905092915050565b60006126c1826127bd565b91506126cc836127bd565b9250826126dc576126db6128a0565b5b828204905092915050565b60006126f2826127bd565b91506126fd836127bd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561273657612735612871565b5b828202905092915050565b600061274c826127bd565b9150612757836127bd565b92508282101561276a57612769612871565b5b828203905092915050565b60006127808261279d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156127e55780820151818401526020810190506127ca565b838111156127f4576000848401525b50505050565b6000612805826127bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561283857612837612871565b5b600182019050919050565b600061284e82612855565b9050919050565b6000612860826128e0565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f44595356657374696e673a206e6f7420656e6f7567682077697468647261776160008201527f626c652066756e64730000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20736c696365506572696f645365636f6e6473206d60008201527f757374206265203e3d2031000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20616d6f756e74206d757374206265203e20300000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f44595356657374696e673a20696e646578206f7574206f6620626f756e647300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f44595356657374696e673a20636c69666644656c74612063616e6e6f7420626560008201527f20686967686572207468616e206475726174696f6e0000000000000000000000602082015250565b7f44595356657374696e673a2063616e6e6f74206372656174652076657374696e60008201527f67207363686564756c652062656361757365206e6f742073756666696369656e60208201527f7420746f6b656e73000000000000000000000000000000000000000000000000604082015250565b7f44595356657374696e673a206f6e6c792062656e656669636961727920616e6460008201527f206f776e65722063616e2072656c656173652076657374656420746f6b656e73602082015250565b7f44595356657374696e673a2076657374696e67206973206e6f74207265766f6360008201527f61626c6500000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f44595356657374696e673a2063616e6e6f742072656c6561736520746f6b656e60008201527f732c206e6f7420656e6f7567682076657374656420746f6b656e730000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f44595356657374696e673a206475726174696f6e206d757374206265203e2030600082015250565b612d2881612775565b8114612d3357600080fd5b50565b612d3f81612787565b8114612d4a57600080fd5b50565b612d5681612793565b8114612d6157600080fd5b50565b612d6d816127bd565b8114612d7857600080fd5b5056fea26469706673582212202184a19e28d3fc3947d62dcfd47dc0df1c11d56debefe49757095ab9b20d478d64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "computeNextVestingScheduleIdForHolder(address)": {
        "details": "Computes the next vesting schedule identifier for a given holder address."
      },
      "computeReleasableAmount(bytes32)": {
        "returns": {
          "_0": "the vested amount"
        }
      },
      "computeVestingScheduleIdForAddressAndIndex(address,uint256)": {
        "details": "Computes the vesting schedule identifier for an address and an index."
      },
      "constructor": {
        "details": "Creates a vesting contract.",
        "params": {
          "token_": "address of the DYS ERC20 token contract"
        }
      },
      "createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
        "params": {
          "amount": "total amount of tokens to be released at the end of the vesting",
          "beneficiary": "address of the beneficiary to whom vested tokens are transferred",
          "cliffDelta": "duration in seconds of the cliff in which tokens will begin to vest",
          "duration": "duration in seconds of the period in which the tokens will vest",
          "revocable": "whether the vesting is revocable or not",
          "slicePeriodSeconds": "duration of a slice period for the vesting in seconds",
          "start": "start time of the vesting period"
        }
      },
      "createVestingSchedules((address,uint256,uint256,uint256,uint256,bool,uint256)[])": {
        "params": {
          "vestingSchedulesIn": "array of vesting schedules to create"
        }
      },
      "getToken()": {
        "details": "Returns the address of the DYS ERC20 token managed by the vesting contract."
      },
      "getVestingIdAtIndex(uint256)": {
        "details": "Returns the vesting schedule id at the given index.",
        "returns": {
          "_0": "the vesting id"
        }
      },
      "getVestingSchedule(bytes32)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingSchedulesCount()": {
        "details": "Returns the number of vesting schedules managed by this contract.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesCountByBeneficiary(address)": {
        "details": "Returns the number of vesting schedules associated to a beneficiary.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesTotalAmount()": {
        "returns": {
          "_0": "the total amount of vested funds"
        }
      },
      "getWithdrawableAmount()": {
        "details": "Returns the amount of tokens that can be withdrawn by the owner.",
        "returns": {
          "_0": "the amount of tokens"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release(bytes32,uint256)": {
        "params": {
          "amount": "the amount to release",
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revoke(bytes32)": {
        "params": {
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "amount": "the amount to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "computeReleasableAmount(bytes32)": {
        "notice": "Computes the vested amount of tokens for the given vesting schedule identifier."
      },
      "createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
        "notice": "Creates a new vesting schedule for a beneficiary."
      },
      "createVestingSchedules((address,uint256,uint256,uint256,uint256,bool,uint256)[])": {
        "notice": "Creates vesting schedules in batch"
      },
      "getVestingSchedule(bytes32)": {
        "notice": "Returns the vesting schedule information for a given identifier."
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "notice": "Returns the vesting schedule information for a given holder and index."
      },
      "getVestingSchedulesTotalAmount()": {
        "notice": "Returns the total amount of vested funds."
      },
      "release(bytes32,uint256)": {
        "notice": "Release vested amount of tokens."
      },
      "revoke(bytes32)": {
        "notice": "Revokes the vesting schedule for given identifier."
      },
      "withdraw(uint256)": {
        "notice": "Withdraw the specified amount if possible."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2888,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3112,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 5198,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_vestingSchedulesIds",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 5203,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_vestingSchedules",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(VestingSchedule)5192_storage)"
      },
      {
        "astId": 5205,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_vestingSchedulesTotalAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5209,
        "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
        "label": "_holdersVestingCount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(VestingSchedule)5192_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct DYSVesting.VestingSchedule)",
        "numberOfBytes": "32",
        "value": "t_struct(VestingSchedule)5192_storage"
      },
      "t_struct(VestingSchedule)5192_storage": {
        "encoding": "inplace",
        "label": "struct DYSVesting.VestingSchedule",
        "members": [
          {
            "astId": 5173,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5175,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "beneficiary",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5177,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "cliff",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5179,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "start",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5181,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "duration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5183,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "slicePeriodSeconds",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5185,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "revocable",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 5187,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "amountTotal",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5189,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "released",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 5191,
            "contract": "contracts/DYS/DYSVesting.sol:DYSVesting",
            "label": "revoked",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}